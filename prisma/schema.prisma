generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  login            String    @unique
  firstName        String    @map("first_name")
  lastName         String    @map("last_name")
  password         String
  role             Role      @default(USER)
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  requests         Request[] @relation("UserRequests")
  assignedRequests Request[] @relation("AssignedRequests")
}

model Request {
  id          Int           @id @default(autoincrement())
  description String
  urgency     Urgency       @default(NORMAL)
  status      RequestStatus @default(PENDING)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  userId      Int           @map("user_id")
  user        User          @relation("UserRequests", fields: [userId], references: [id])

  assignedToId    Int?    @map("assigned_to_id")
  assignedTo      User?   @relation("AssignedRequests", fields: [assignedToId], references: [id])
  assignedComment String? @map("assigned_comment")
}

enum Role {
  USER
  ADMIN
}

enum Urgency {
  NORMAL // обычный
  MEDIUM // средний
  HIGH // срочный
}

enum RequestStatus {
  PENDING // ожидает
  IN_PROGRESS // принята в работу
  COMPLETED // выполнена
  REJECTED // отклонена
}
